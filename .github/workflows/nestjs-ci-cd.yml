name: NestJS CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  pipeline:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Detect Secrets
        run: |
          pip install detect-secrets
          detect-secrets scan > .secrets.baseline --exclude-files pnpm-lock.yaml
          detect-secrets audit .secrets.baseline

      - name: Install pnpm
        run: npm install -g pnpm@9.4

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Run unit tests
        run: pnpm run test

      - name: Version bump
        run: |
          BRANCH=$(echo "${{ github.ref_name }}")
          VERSION=$(sh scripts/version_bump.sh $BRANCH)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update version and generate tag
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          # update package.json version
          npm version $VERSION --no-git-tag-version

          # Git setup
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Commit and push changes
          git add package.json
          git commit -m "chore: bump version to $VERSION"
          git push origin ${{ github.ref }}

          # Create tag
          git tag -a "v${VERSION}" -m "Release version ${VERSION}"
          git push origin "v${VERSION}"

      - name: Run ESLint
        run: pnpm run lint

      # - name: Build Docker image
      #   run: docker build -t my-app:${{ env.VERSION }} .

      # - name: Sign Docker image
      #   run: |
      #     cosign sign --key ${{ secrets.COSIGN_KEY }} my-app:${{ env.VERSION }}

      # - name: Push Docker image
      #   run: |
      #     echo ${{ secrets.REGISTRY_PASSWORD }} | docker login -u ${{ secrets.REGISTRY_USER }} --password-stdin
      #     docker tag my-app:${{ env.VERSION }} registry.example.com/my-app:${{ env.VERSION }}
      #     docker push registry.example.com/my-app:${{ env.VERSION }}

      # - name: Deploy
      #   run: |
      #     ./scripts/deploy.sh --env ${{ github.ref_name }} --version ${{ env.VERSION }}

      # - name: ZAP Scan (only on test)
      #   if: github.ref_name == 'test'
      #   uses: zaproxy/action-baseline@v0.7.0
      #   with:
      #     target: 'https://test.example.com'
